Glance là một dịch vụ cho phép người dùng tạo và quản lý hình ảnh máy ảo và đĩa để khai thác các ứng dụng và dịch vụ trong môi trường điện toán đám mây đám mây.
chức năng : 
+Tạo và quản lý hình ảnh máy ảo: Glance cho phép người dùng tạo và quản lý các hình ảnh máy ảo để sử dụng cho triển khai các ứng dụng và dịch vụ trên một môi trường điện toán đám mây OpenStack.
+Chia sẻ hình ảnh: Glance cho phép người dùng chia sẻ các hình ảnh máy ảo với các người dùng khác trong cùng một dự án hoặc đám mây OpenStack.
+Quản lý các phiên bản hình ảnh: Glance cho phép người dùng quản lý các phiên bản khác nhau của một hình ảnh máy ảo, để dễ dàng quay trở lại các phiên bản trước đó nếu cần thiết.
+Tìm kiếm hình ảnh: Glance cung cấp tính năng tìm kiếm hình ảnh để người dùng có thể tìm kiếm và sử dụng các hình ảnh máy ảo được chia sẻ trong đám mây OpenStack.
+Hỗ trợ nhiều định dạng hình ảnh: Glance hỗ trợ nhiều định dạng hình ảnh máy ảo khác nhau, bao gồm RAW, QEMU, ISO và VMDK.



Thành phần:
Glance là một dịch vụ quản lý hình ảnh trong OpenStack, cung cấp các tính năng quản lý và phân phối các hình ảnh máy ảo, các tệp iso và các tệp khác. 
Các thành phần chính của Glance gồm:
+Glance API Server: Là thành phần trung tâm của Glance, cung cấp API cho phép các máy chủ khác truy cập và quản lý hình ảnh. Glance API Server có thể chạy độc lập hoặc trên một máy chủ điều khiển.
+Glance Registry: Là một máy chủ cơ sở dữ liệu đơn giản, lưu trữ các thông tin về hình ảnh và các metadata của nó, cung cấp khả năng tìm kiếm và truy vấn cho Glance API Server.
+Glance Store: Là một API lưu trữ, cung cấp các giao diện cho phép Glance lưu trữ hình ảnh trên nhiều loại lưu trữ khác nhau, bao gồm cả Swift, Ceph, NFS, và các lưu trữ Amazon S3.Glance Client: Là một công cụ dòng lệnh, cung cấp khả năng quản lý hình ảnh từ xa thông qua Glance API Server. 
+Glance Client cung cấp các lệnh để tạo, sửa đổi, xóa và tìm kiếm các hình ảnh.


luồng: 
Luồng hoạt động giữa các thành phần trong Glance OpenStack như sau:
1 Người dùng sử dụng CLI hoặc giao diện web để tạo hoặc truy cập hình ảnh máy ảo.
2 Glance API nhận yêu cầu và xác thực xem người dùng có quyền truy cập hình ảnh đó hay không bằng Keystone.
3 Nếu yêu cầu hợp lệ, Glance API sẽ yêu cầu Glance Registry xem hình ảnh đó có tồn tại trong Glance hiện tại hay không.
4 Glance Registry sẽ truy vấn metadata để xác định xem hình ảnh có tồn tại hay không.
5 Nếu hình ảnh không tồn tại, Glance API sẽ trả về thông báo lỗi cho người dùng hoặc tạo mới hình ảnh theo yêu cầu.
6 Nếu hình ảnh tồn tại, Glance API sẽ truy vấn metadata để xác định định dạng và kích thước của hình ảnh.
7 Glance API sẽ yêu cầu Glance Store tải hình ảnh từ nơi lưu trữ.
8 Sau khi tải xong, Glance API sẽ trả về hình ảnh đó cho người dùng hoặc sử dụng nó để tạo máy ảo.


https://www.researchgate.net/publication/346347453_On_Construction_and_Performance_Evaluation_of_a_Virtual_Desktop_Infrastructure_With_GPU_Accelerated

![image](https://maestropandy.files.wordpress.com/2016/05/1.png)

Máy chủ nova-api gửi thông tin đăng nhập của người dùng tới Keystone để xác thực (1 và 2).
Sau khi xác thực thành công, nova-api liên hệ với nova-db để khởi tạo thông tin cấu hình ban đầu của phiên bản mới trong cơ sở dữ liệu (4, 5, 6 và 7).
Sau đó, nova-API gửi một RPC đến nova-scheduler yêu cầu ID máy chủ cho việc khởi động instance (8 và 9). 
nova-scheduler lấy thông tin từ nova-db và sử dụng các bộ lọc cũng như hàm trọng số để chọn máy chủ tốt nhất (hoặc ít tải nhất) và trả về ID của nó (10, 11 và 12). 
Bộ lập lịch chọn compute node thích hợp làm máy chủ và gửi thông báo để bắt đầu phiên bản mới (12 và 13).
Nova-compute chạy, sau đó RPC gọi nova-conductor và nova-conductor truy cập nova-compute tới nova-db để lấy ID máy chủ, flavor , vCPU và các thông tin khác (14, 15, 16, 17 và 18 ). 
Bằng cách sử dụng token xác thực, nova-compute thực hiện lệnh  REST (representational state transfer - chuyển trạng thái đại diện)  tới glance_API  từ image. image được lấy từ thư viện và tải lên máy chủ đã chọn (19, 20 và 21). 
image đã tải lên này được lưu vào bộ nhớ cache để sử dụng trong tương lai. Sau đó, nova-compute gọi neutron-API để truy xuất thông tin cấu hình và phân bổ mạng cho các giao thức internet (IP) cố định được chỉ định cho các instance mới (22, 23 và 24). 
Nếu người dùng yêu cầu đính kèm một số ổ đĩa vào instance, nova-compute sẽ sử dụng các lệnh gọi REST và các ổ đĩa bổ sung (25, 26 và 27) cho cinder-API. 
Cuối cùng, nova-compute đặt tất cả thông tin  chuyển tiếp tới trình điều khiển ảo hóa (virtualization driver)  và một yêu cầu  được tạo trên trình ảo hóa (hypervisor)(28). 


